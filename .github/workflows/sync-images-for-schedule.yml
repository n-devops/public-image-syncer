name: GitHub Actions Sync Images For Schedule
on:
  # 手动触发
  workflow_dispatch:
  # push触发
  push:
    paths:
      - .github/workflows/sync-images-for-schedule.yml
      - config/transfer-images.yaml
    branches:
      - main
  schedule:
    # every day at 7am & 7pm pacific
    - cron: "0 2,14 * * *"
jobs:
  sync-images:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-sync-images
      cancel-in-progress: true
    env:
      ALIYUNCS_BEIJING_PUBLIC_IMAGE_MIRROR_USERNAME: ${{ secrets.ALIYUNCS_BEIJING_PUBLIC_IMAGE_MIRROR_USERNAME }}
      ALIYUNCS_BEIJING_PUBLIC_IMAGE_MIRROR_PASSWORD: ${{ secrets.ALIYUNCS_BEIJING_PUBLIC_IMAGE_MIRROR_PASSWORD }}
      OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
      OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: generate images.yaml
        run: |
          python hack/generate_images.py
          
          echo "---------------------------------------transfer-images.yaml"
          cat transfer-images.yaml
          
          echo ""
          echo "---------------------------------------private-images.yaml"
          cat private-images.yaml

      - run: |
          ./bin/ossutil config -e oss-cn-beijing.aliyuncs.com -i ${OSS_ACCESS_KEY_ID} -k ${OSS_ACCESS_KEY_SECRET} -L CH -c ossutilconfig
          ./bin/ossutil -c ossutilconfig cp -f transfer-images.yaml oss://${{ secrets.OSS_BUCKET }}/
          ./bin/ossutil -c ossutilconfig cp -f private-images.yaml oss://${{ secrets.OSS_BUCKET }}/
          ./bin/ossutil -c ossutilconfig ls oss://${{ secrets.OSS_BUCKET }}

      - name: Image Sync Action
        run: |
          ./bin/image-syncer --auth=./config/auth.yaml --images=./transfer-images.yaml --proc=10 --retries=2 2>&1 | grep -v "Auth information not found" | grep -v "Finish synchronizing blob sha256:" |tee temp_target_images.log
          if [ -f "temp_target_images.log" ]; then
            output=$(cat temp_target_images.log)
            if [[ $output == *"failed tasks exist"* ]]; then
              echo "执行失败, 退出并打印错误"
              exit 1
            fi
          fi
